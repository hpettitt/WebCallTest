{
  "name": "Interview Verification",
  "nodes": [
    {
      "parameters": {
        "functionCode": "// Get the single record from Airtable (no records array)\nconst record = $input.first().json;\n\n// Debug: Log all field names\nconsole.log('Available fields:', Object.keys(record));\n\n// Extract required fields (adjust names if needed)\nconst fullName = record['Candidate Name'];\nconst interviewTimeStr = record['Interview Time'];\n\n// Validate presence\nif (fullName === undefined) {\n  throw new Error('Field \"Candidate Name\" not found. Available: ' + Object.keys(record).join(', '));\n}\nif (interviewTimeStr === undefined) {\n  throw new Error('Field \"Interview Time\" not found. Available: ' + Object.keys(record).join(', '));\n}\n\n// Extract first name (part before first space)\nconst firstName = fullName.trim().split(' ')[0] || fullName.trim();\n\n// Parse interview time\nconst interviewTime = new Date(interviewTimeStr);\nconst now = new Date();\n\n// Define window: 5 min before, 20 min after\nconst FIVE_MIN = 5 * 60 * 1000;\nconst TWENTY_MIN = 20 * 60 * 1000;\n\nconst windowStart = new Date(interviewTime.getTime() - FIVE_MIN);\nconst windowEnd = new Date(interviewTime.getTime() + TWENTY_MIN);\n\nconst isValid = now >= windowStart && now <= windowEnd;\n\n// Return clean response\nreturn [{\n  json: {\n    is_valid: isValid,\n    first_name: firstName\n  }\n}];"
      },
      "id": "64989b78-2435-4638-8aae-72f3a12396ae",
      "name": "ValidateToken",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        448,
        0
      ]
    },
    {
      "parameters": {
        "authentication": "airtableOAuth2Api",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appni7Lgyrk5sjLXY",
          "mode": "list",
          "cachedResultName": "Candidate Tracker",
          "cachedResultUrl": "https://airtable.com/appni7Lgyrk5sjLXY"
        },
        "table": {
          "__rl": true,
          "value": "tblZbvFHR0vV2pPCd",
          "mode": "list",
          "cachedResultName": "Candidates",
          "cachedResultUrl": "https://airtable.com/appni7Lgyrk5sjLXY/tblZbvFHR0vV2pPCd"
        },
        "filterByFormula": "={{ '{token} = \"' + $json.body.token + '\"' }}\n\n",
        "options": {
          "fields": [
            "Candidate Name",
            "Email",
            "Interview Time",
            "token"
          ]
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        224,
        0
      ],
      "id": "519be23d-6870-4935-8f66-5591359b468e",
      "name": "Search records",
      "credentials": {
        "airtableOAuth2Api": {
          "id": "m3mu45U9vA2UAO33",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "interview-verify",
        "responseMode": "lastNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              }
            ]
          }
        }
      },
      "id": "63749f9b-6dac-4c31-ab52-8bea32f9d46e",
      "name": "Index.htm2 n8n Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "webhookId": "66fbeac1-d75a-41b1-8118-174cd4004cfd"
    }
  ],
  "pinData": {},
  "connections": {
    "Search records": {
      "main": [
        [
          {
            "node": "ValidateToken",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Index.htm2 n8n Webhook": {
      "main": [
        [
          {
            "node": "Search records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false
  },
  "versionId": "457830d4-4266-4b0b-bcb3-86262206ff74",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f0340714a889de34029a918512ab69ac03a5f9c338fbfae0e656eee3e31467d1"
  },
  "id": "J4eKReUhIL4FNvbq",
  "tags": []
}